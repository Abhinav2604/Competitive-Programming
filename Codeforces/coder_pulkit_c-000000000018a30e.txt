#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
using namespace __gnu_pbds; 
using namespace std;

#define ff              first
#define ss              second
#define int             long long
#define pb              push_back
#define mp              make_pair
#define pii             pair<int,int>
#define vi              vector<int>
#define mii             map<int,int>
#define pqb             priority_queue<int>
#define pqs             priority_queue<int,vi,greater<int> >
#define MX              200005
#define mod             1000000007
#define inf             1e18
#define ps(x,y)         fixed<<setprecision(y)<<x
#define mk(arr,n,type)  type *arr=new type[n];
#define w(x)            int x; cin>>x; while(x--)
#define pw(b,p)         pow(b,p) + 0.1
mt19937                 rng(chrono::steady_clock::now().time_since_epoch().count());

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

void c_p_c()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
}

vi arr[50001];

int32_t main()
{
    c_p_c();
    int tc; cin>>tc;
    for(int tnum=1;tnum<=tc;++tnum)
    {
        int ans=0;
        int n,s; cin>>n>>s;
        map<vi,int> m;

        for(int i=0;i<n;++i)
        {
            arr[i].clear();
            int x; cin>>x;
            int sz=x;

            while(x--)
            {
                int sk; cin>>sk;
                arr[i].pb(sk);
            }

            sort(arr[i].begin(), arr[i].end());

            int num = pw(2,sz);

            for(int msk=1;msk<num;++msk)
            {
            	vi tmp;

            	for(int id=0;id<sz;++id)
            		if((msk>>id)&1)
            			tmp.pb(arr[i][id]);

            	m[tmp]++;
            }
        }

        for(int i=0;i<n;++i)
        {
        	int cant=m[arr[i]];
        	
        	/*int sz = arr[i].size();
        	int num = pw(2,sz);
        	cout<<i<<' '<<sz<<'\n';

        	for(int msk = 1 ; msk<num ; ++msk)
            {
            	vi tmp;

            	for(int id=0;id<sz;++id)
            		if((msk>>id)&1)
            			tmp.pb(arr[i][id]);

            	int fct = -1;

            	if(__builtin_popcount(msk)&1)
            		fct=1;

            	cant += fct*m[tmp];
            	//cout<<i<<'\n';

            	/*for(auto el : tmp)
            		cout<<el<<' ';
            	cout<<"* ";
            	//cout<<m[tmp]<<'\n';
            }*/

            ans += (n-cant);
        }

        cout<<"Case #"<<tnum<<": "<<ans<<'\n';
    }
    return 0;
}